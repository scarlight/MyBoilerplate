// better default colors provided by http://clrs.cc/
// increment by odd of 3 since most lightness is in odd percentage
                    // hue, sat, lig
@navy    : #001f3f; // 210° 100% 12%
@blue    : #0074d9; // 208° 100% 43%
@aqua    : #7fdbff; // 197° 100% 75%
@teal    : #39cccc; // 180° 59% 51%
@olive   : #3d9970; // 153° 43% 42%
@green   : #2ecc40; // 127° 63% 49%
@lime    : #01ff70; // 146° 100% 50%
@yellow  : #ffdc00; // 52° 100% 50%
@orange  : #ff851b; // 28° 100% 55%
@red     : #ff4136; // 3° 100% 61%
@maroon  : #85144b; // 331° 74% 30%
@fuchsia : #f012be; // 314° 88% 51%
@purple  : #b10dc9; // 292° 88% 42%
@black   : #111111; // 0° 0% 7%
@gray    : #aaaaaa; // 0° 0% 67%
@silver  : #dddddd; // 0° 0% 87%

.bg( @shade, @color )
{
    @loop:100; // total times to loop

    .generate-bgc( @loop, @shade, @color, 1 ); // call the loop mixin

    .generate-bgc( @loop, @shade, @color, @i:1 ) when ( @i =< @loop ) { // the loop in action

        // & directly add in this property into the declaration with no append or prepend mode
        & when ( ( ( @shade * 3 ) - 2 ) = @i  )  //supplied range from 1 - 34
        {
            background-color:  hsla( hue( @@color ), saturation( @@color ), ( @i / 100% ), 0.8 ); // produce the color shades
        }

    .generate-bgc( @loop, @shade, @color, ( @i + 3 ) ); // increment by 3 shades of lightness
    }
}